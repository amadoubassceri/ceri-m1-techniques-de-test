version: 2.1

# Import the Codecov orb
orbs:
  codecov: codecov/codecov@4.0.1

# Define a job to be invoked later in a workflow.
jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:21.0
    steps:
      # Checkout the code as the first step.
      - checkout

      # Build the project
      - run:
          name: Build
          command: mvn -B -DskipTests clean package

      # Run tests
      - run:
          name: Test
          command: mvn test

      # Generate the JaCoCo report
      - run:
          name: Generate Code Coverage Report
          command: mvn jacoco:report

      # Add Checkstyle verification
      - run:
          name: Run Checkstyle Verification
          command: mvn checkstyle:check

      # Generate Checkstyle HTML report
      - run:
          name: Generate Checkstyle HTML Report
          command: mvn checkstyle:checkstyle

      # Upload the coverage report to Codecov
      - run:
          name: Upload to Codecov
          command: bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN

  docs-deploy:
    docker:
      - image: cimg/openjdk:20.0
    steps:
      - checkout

      # Generate Javadoc
      - run:
          name: Generate Javadoc
          command: mvn javadoc:javadoc

      # Install and configure gh-pages
      - run:
          name: Install and configure gh-pages
          command: |
            # Configurer git pour le déploiement
            git config --global user.email "amadoubassceri@gmail.com"
            git config --global user.name "amadoubassceri"

            # Cloner le dépôt et basculer sur la branche gh-pages
            git clone https://$GH_TOKEN_GITHUB@github.com/amadoubassceri/ceri-m1-techniques-de-test.git gh-pages
            cd gh-pages

            # Basculer sur la branche gh-pages ou la créer si elle n'existe pas
            git checkout gh-pages || git checkout -b gh-pages

            # Récupérer les derniers changements de la branche gh-pages
            git pull origin gh-pages --rebase || echo "No remote changes to pull"

            # Copier tous les fichiers Javadoc dans la racine de la branche gh-pages
            cp -r ../target/site/apidocs/* ./

            # Ajouter, committer et pousser les changements vers GitHub Pages
            git add -A
            git commit -m "Updated Javadoc" || echo "No changes to commit"
            git push https://$GH_TOKEN_GITHUB@github.com/amadoubassceri/ceri-m1-techniques-de-test.git gh-pages --force

# Orchestrate jobs using workflows
workflows:
  version: 2
  deploy-workflow:
    jobs:
      - build-and-test:
          filters:
            branches:
              only:
                - master
      - docs-deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - master
