version: 2.1

# Import the Codecov orb
orbs:
  codecov: codecov/codecov@4.0.1

jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:11.0  # Utilisation de l'image OpenJDK 11 pour le build
    steps:
      - checkout  # Étape de checkout du code

      # Build le projet et génère la Javadoc
      - run:
          name: Build and Package
          command: mvn -B -DskipTests clean package

      # Génération de la Javadoc
      - run:
          name: Generate Javadoc
          command: mvn javadoc:javadoc

      # Vérifier si la Javadoc a bien été générée
      - run:
          name: Check if Javadoc is generated
          command: |
            if [ -d "target/site/apidocs" ]; then
              echo "Javadoc generated successfully!"
            else
              echo "Javadoc directory not found! Check build logs."
              exit 1
            fi

      # Lancer les tests et générer le rapport de couverture
      - run:
          name: Test
          command: mvn test

      - run:
          name: Generate Code Coverage Report
          command: mvn jacoco:report

      # Vérification avec Checkstyle
      - run:
          name: Run Checkstyle Verification
          command: mvn checkstyle:check

      # Générer le rapport HTML Checkstyle
      - run:
          name: Generate Checkstyle HTML Report
          command: mvn checkstyle:checkstyle

      # Télécharger le rapport de couverture vers Codecov
      - run:
          name: Upload to Codecov
          command: bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN

  deploy-gh-pages:
    docker:
      - image: cimg/python:3.8  # Utilisation de Python pour le déploiement sur GitHub Pages
    steps:
      - checkout  # Étape de checkout du code

      # Vérifier si le répertoire de la Javadoc existe
      - run:
          name: Check Javadoc Directory Before Deploy
          command: |
            if [ ! -d "target/site/apidocs" ]; then
              echo "Error: target/site/apidocs does not exist. Skipping deployment."
              exit 1
            fi

      # Déployer la Javadoc sur GitHub Pages
      - run:
          name: Deploy Javadoc to GitHub Pages
          command: |
            git config --global user.name "amadoubassceri"  # Configuration utilisateur Git
            git config --global user.email "narutokonoya1@gmail.com"  # Configuration email Git
            git remote set-url origin https://${GH_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git  # Authentification via token
            gh-pages -d target/site/apidocs  # Déployer le dossier de la Javadoc sur la branche gh-pages

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-and-test  # Job de test et de génération de la Javadoc
      - deploy-gh-pages:  # Job de déploiement sur GitHub Pages
          requires:
            - build-and-test  # Dépendance du job build-and-test
